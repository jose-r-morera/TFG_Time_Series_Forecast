[
    {
        "id": "ac5ff1e93343fdc4",
        "type": "tab",
        "label": "MedicionesGrafcan",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "23d3cf0a3496401e",
        "type": "tab",
        "label": "OpenMeteo",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3132f082b38ee5af",
        "type": "tab",
        "label": "TestPostgre",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8b9026f3bf7c3130",
        "type": "subflow",
        "name": "Crear dispositivo y \\n guardar atributos",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 300,
                "y": 140,
                "wires": [
                    {
                        "id": "e93f84c9ee251f8b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 880,
                "y": 620,
                "wires": [
                    {
                        "id": "d90d184d7d0a10ca",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "09b02b2d35a7817d",
        "type": "group",
        "z": "23d3cf0a3496401e",
        "name": "",
        "style": {
            "fill": "#ffefbf",
            "label": true
        },
        "nodes": [
            "9e8a99185e3350ed",
            "c830440e22355f7b",
            "73fa8a22d0710a6a",
            "a8b988c67fdf4f2f",
            "c4acccca2bd0358a"
        ],
        "x": 14,
        "y": 19,
        "w": 712,
        "h": 142
    },
    {
        "id": "50a43dec8ecaae07",
        "type": "group",
        "z": "23d3cf0a3496401e",
        "name": "",
        "style": {
            "fill": "#e3f3d3",
            "label": true
        },
        "nodes": [
            "de93898b4de01368",
            "68bf10eabf62b720",
            "89fa674e6b03b2fc",
            "67bde6574f702c65"
        ],
        "x": 14,
        "y": 199,
        "w": 552,
        "h": 142
    },
    {
        "id": "95be1cdf72319762",
        "type": "sqlitedb",
        "db": "/data/datalog.db",
        "mode": "RWC"
    },
    {
        "id": "1c25415d.b8427f",
        "type": "sqlitedb",
        "db": "/home/pi/sqlite/nodered"
    },
    {
        "id": "156af96f.f8fd27",
        "type": "ui_tab",
        "name": "Home",
        "icon": "home",
        "order": "1"
    },
    {
        "id": "1e3fe400.0baf5c",
        "type": "ui_tab",
        "name": "Reports",
        "icon": "dashboard",
        "order": 9
    },
    {
        "id": "27c3d951.18a4e6",
        "type": "ui_group",
        "name": "MiFlora",
        "tab": "156af96f.f8fd27",
        "order": 2,
        "disp": true,
        "width": "6"
    },
    {
        "id": "bd903d6.d9fc7c",
        "type": "ui_group",
        "name": "Report",
        "tab": "1e3fe400.0baf5c",
        "order": 2,
        "disp": true,
        "width": "18"
    },
    {
        "id": "1e17cd0b.862863",
        "type": "ui_group",
        "name": "Selection",
        "tab": "1e3fe400.0baf5c",
        "order": 1,
        "disp": true,
        "width": "5"
    },
    {
        "id": "e985c4fd8e8ea693",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "2136aee6ef4e9b7a",
        "type": "sqlitedb",
        "db": "/home/jr/Desktop/nodeRed/data/meteo",
        "mode": "RWC"
    },
    {
        "id": "b5d03cf417768022",
        "type": "postgreSQLConfig",
        "name": "",
        "host": "127.0.0.1",
        "hostFieldType": "str",
        "port": 5432,
        "portFieldType": "num",
        "database": "postgres",
        "databaseFieldType": "str",
        "ssl": "false",
        "sslFieldType": "bool",
        "applicationName": "",
        "applicationNameType": "str",
        "max": 10,
        "maxFieldType": "num",
        "idle": 1000,
        "idleFieldType": "num",
        "connectionTimeout": 10000,
        "connectionTimeoutFieldType": "num",
        "user": "postgres",
        "userFieldType": "str",
        "password": "19",
        "passwordFieldType": "str"
    },
    {
        "id": "876c3041d466255e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "mqtt.iter.es",
        "port": "1885",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "865b5e4cc82adc9d",
        "type": "mqtt-broker",
        "name": "Thingsboard Regadia",
        "broker": "192.168.21.95 ",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "fe995dd71f47bc61",
        "type": "ui_tab",
        "name": "Consumos",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "81a2f5bbe3a80eb1",
        "type": "ui_tab",
        "name": "Contratos",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "acb10ab240778cc3",
        "type": "ui_group",
        "name": "Consumos",
        "tab": "fe995dd71f47bc61",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "31b6db9637c3b6e0",
        "type": "ui_group",
        "name": "Contratos",
        "tab": "81a2f5bbe3a80eb1",
        "order": 1,
        "disp": true,
        "width": "25",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a0e60584a490e8a4",
        "type": "http request",
        "z": "8b9026f3bf7c3130",
        "name": "http create device",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://nexo.iter.es/api/device",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 290,
        "y": 200,
        "wires": [
            [
                "4f13c8f45c40614a"
            ]
        ]
    },
    {
        "id": "3f0a289543d47f65",
        "type": "debug",
        "z": "8b9026f3bf7c3130",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.id.id",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 200,
        "wires": []
    },
    {
        "id": "e93f84c9ee251f8b",
        "type": "change",
        "z": "8b9026f3bf7c3130",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "token",
                "pt": "msg",
                "to": "thingsboard.X-Authorization",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Authorization",
                "pt": "msg",
                "to": "thingsboard.X-Authorization",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "*/*",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept-Enconding",
                "pt": "msg",
                "to": "gzip, deflate, br",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"name\":device_info.name,\t   \"type\":device_info.type,\t   \"label\":device_info.label,\t   \"deviceProfileId\":{\t       \"id\":device_info.deviceProfileId,\t       \"entityType\":\"DEVICE_PROFILE\"\t   }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 140,
        "wires": [
            [
                "a0e60584a490e8a4"
            ]
        ]
    },
    {
        "id": "e11ba8605ecefc28",
        "type": "http request",
        "z": "8b9026f3bf7c3130",
        "name": "http get access token",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://nexo.iter.es/api/device/{{{device_id}}}/credentials",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 220,
        "y": 460,
        "wires": [
            [
                "fc0a72c64cb51476"
            ]
        ]
    },
    {
        "id": "e081c80a6a8b739b",
        "type": "debug",
        "z": "8b9026f3bf7c3130",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 540,
        "wires": []
    },
    {
        "id": "fc0a72c64cb51476",
        "type": "json",
        "z": "8b9026f3bf7c3130",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 490,
        "y": 460,
        "wires": [
            [
                "d54ac966bc79315e"
            ]
        ]
    },
    {
        "id": "5748446c83ab90dd",
        "type": "change",
        "z": "8b9026f3bf7c3130",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device_id",
                "pt": "msg",
                "to": "payload.id.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 260,
        "wires": [
            [
                "0328a1e1fd5a60bf",
                "6aee540d3b600c3d"
            ]
        ]
    },
    {
        "id": "4f13c8f45c40614a",
        "type": "json",
        "z": "8b9026f3bf7c3130",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 200,
        "wires": [
            [
                "3f0a289543d47f65",
                "5748446c83ab90dd"
            ]
        ]
    },
    {
        "id": "0328a1e1fd5a60bf",
        "type": "debug",
        "z": "8b9026f3bf7c3130",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 260,
        "wires": []
    },
    {
        "id": "6aee540d3b600c3d",
        "type": "change",
        "z": "8b9026f3bf7c3130",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "token",
                "pt": "msg",
                "to": "thingsboard.X-Authorization",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Authorization",
                "pt": "msg",
                "to": "thingsboard.X-Authorization",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "*/*",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept-Enconding",
                "pt": "msg",
                "to": "gzip, deflate, br",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 380,
        "wires": [
            [
                "e11ba8605ecefc28"
            ]
        ]
    },
    {
        "id": "2da61355f8398ee6",
        "type": "change",
        "z": "8b9026f3bf7c3130",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "token",
                "pt": "msg",
                "to": "thingsboard.X-Authorization",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Authorization",
                "pt": "msg",
                "to": "thingsboard.X-Authorization",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "*/*",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept-Enconding",
                "pt": "msg",
                "to": "gzip, deflate, br",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{   \"name\": \"Dummy 2\",   \"type\": \"Software\",   \"label\": \"dummy-2\",   \"deviceProfileId\": {     \"id\": \"04d00af0-7cda-11eb-9bab-33d40eea06fa\",     \"entityType\": \"DEVICE_PROFILE\"   } }",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "6fa722c5eb4c00a4",
        "type": "inject",
        "z": "8b9026f3bf7c3130",
        "name": "Create device",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d90d184d7d0a10ca",
        "type": "http request",
        "z": "8b9026f3bf7c3130",
        "name": "http save attributes",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://nexo.iter.es/api/v1/{{{device_info.access_token}}}/attributes",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 350,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "37ef461932770651",
        "type": "debug",
        "z": "8b9026f3bf7c3130",
        "name": "debug 29",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 320,
        "wires": []
    },
    {
        "id": "7e55932d7f9981c7",
        "type": "change",
        "z": "8b9026f3bf7c3130",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "token",
                "pt": "msg",
                "to": "thingsboard.X-Authorization",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Authorization",
                "pt": "msg",
                "to": "thingsboard.X-Authorization",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "headers.Accept",
                "pt": "msg",
                "to": "*/*",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "headers.Accept-Enconding",
                "pt": "msg",
                "to": "gzip, deflate, br",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t   \"cups\":device_info.cups,\t   \"pointType\":device_info.pointType,\t   \"distributorCode\":device_info.distributorCode\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 620,
        "wires": [
            [
                "d90d184d7d0a10ca"
            ]
        ]
    },
    {
        "id": "d54ac966bc79315e",
        "type": "change",
        "z": "8b9026f3bf7c3130",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "device_info.access_token",
                "pt": "msg",
                "to": "payload.credentialsId",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 280,
        "y": 540,
        "wires": [
            [
                "e081c80a6a8b739b",
                "7e55932d7f9981c7"
            ]
        ]
    },
    {
        "id": "e23df2acfa4feeaa",
        "type": "http request",
        "z": "ac5ff1e93343fdc4",
        "name": "peticionAPI",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://sensores.grafcan.es/api/v1.0/observations/?datastream__thing={{{thing_id}}}&result_time_after={{{dateFrom}}}&result_time_before={{{dateTo}}}&datastream={{{datastream}}}&page={{{page}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "accept",
                "valueType": "other",
                "valueValue": "application/json"
            },
            {
                "keyType": "other",
                "keyValue": "Authorization",
                "valueType": "other",
                "valueValue": "Api-Key t96Ff6lD.gMd1FS8ZBeEjoNgbKKfwH4bA1dnmi6TR"
            }
        ],
        "x": 1030,
        "y": 200,
        "wires": [
            [
                "c943dd8822646770"
            ]
        ]
    },
    {
        "id": "1e692a03ebcb0c6e",
        "type": "change",
        "z": "ac5ff1e93343fdc4",
        "name": "EstacionOrotava",
        "rules": [
            {
                "t": "set",
                "p": "thing_id",
                "pt": "msg",
                "to": "22",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "station_table",
                "pt": "msg",
                "to": "orotava",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 200,
        "wires": [
            [
                "597d69034513b617",
                "4d2f78f769e6a4f8",
                "709342bf9606ee68"
            ]
        ]
    },
    {
        "id": "dd89e59f2e171af0",
        "type": "inject",
        "z": "ac5ff1e93343fdc4",
        "name": "ActualizarBD",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "page",
                "v": "1",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 200,
        "wires": [
            [
                "b0979fc019df0930"
            ]
        ]
    },
    {
        "id": "f2ba5a20785da92e",
        "type": "function",
        "z": "ac5ff1e93343fdc4",
        "name": "IntervaloFechas",
        "func": "const hoursToSubtract = 6; // change this value as needed\nconst now = new Date();\nconst past = new Date(now.getTime() - hoursToSubtract * 60 * 60 * 1000);\n\n\nmsg.dateFrom = encodeURIComponent(past.toISOString().substring(0, 16) + '+00:00');\nmsg.dateTo = encodeURIComponent(now.toISOString().substring(0, 16) + '+00:00');\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 200,
        "wires": [
            [
                "1e692a03ebcb0c6e",
                "a566477df7e13655",
                "2277daeda82b055d"
            ]
        ]
    },
    {
        "id": "b0979fc019df0930",
        "type": "trigger",
        "z": "ac5ff1e93343fdc4",
        "name": "cada6h",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-6",
        "extend": false,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 260,
        "y": 200,
        "wires": [
            [
                "f2ba5a20785da92e"
            ]
        ]
    },
    {
        "id": "c943dd8822646770",
        "type": "join",
        "z": "ac5ff1e93343fdc4",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1170,
        "y": 200,
        "wires": [
            [
                "beaf31bfc3c9a8fd"
            ]
        ]
    },
    {
        "id": "beaf31bfc3c9a8fd",
        "type": "function",
        "z": "ac5ff1e93343fdc4",
        "name": "peticionSQL",
        "func": "let variables = [\"TemperaturaAire\", \"PresionAtmosferica\", \"HumedadRelativa\"]\n\nlet columns = [\"ts\", \"air_temperature\", \"atmospheric_pressure\", \"relative_humidity\"];\n\nlet length = msg.payload[variables[0]]['results'].length;\n// Check variable lenghts is the same\nfor (let v of variables) {\n    if (msg.payload[v]['results'].length !== length) {\n        throw new Error(`Length mismatch: ${v} has a different number of results.`);\n    }\n}\n\n// Check that for each index, the timestamp is the same for every variable\nfor (let index = 0; index < length; index++) {\n    let baseTime = msg.payload[variables[0]]['results'][index]['resultTime'];\n    for (let v of variables) {\n        if (msg.payload[v]['results'][index]['resultTime'] !== baseTime) {\n            throw new Error(`Timestamp mismatch at index ${index} for variable ${v}: \n            base = ${baseTime}, v = ${msg.payload[v]['results'][index]['resultTime']}`);\n        }\n    }\n}\n\nlet values = Array.from({ length }).map((_, index) => {\n    return `('${msg.payload[variables[0]]['results'][index]['resultTime']}', ${variables.map(v => \n            msg.payload[v]['results'][index]['result']\n        ).join(', ')})`;\n    }).join(',');\n\n// Construir la consulta completa\nmsg.payload = `INSERT INTO grafcan_${msg.station_table} (${columns.join(', ')}) \n                   VALUES ${values} \n                   ON CONFLICT(ts) DO UPDATE SET \n                   ${columns.map(c => `${c} = excluded.${c}`).join(', ')};`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1310,
        "y": 200,
        "wires": [
            [
                "911612affa2792dd",
                "e71b5cb6d7be3034"
            ]
        ]
    },
    {
        "id": "597d69034513b617",
        "type": "change",
        "z": "ac5ff1e93343fdc4",
        "name": "PresionAtmosferica",
        "rules": [
            {
                "t": "set",
                "p": "datastream",
                "pt": "msg",
                "to": "2030",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "PresionAtmosferica",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 140,
        "wires": [
            [
                "e23df2acfa4feeaa"
            ]
        ]
    },
    {
        "id": "4d2f78f769e6a4f8",
        "type": "change",
        "z": "ac5ff1e93343fdc4",
        "name": "HumedadRelativa",
        "rules": [
            {
                "t": "set",
                "p": "datastream",
                "pt": "msg",
                "to": "2022",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "HumedadRelativa",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 200,
        "wires": [
            [
                "e23df2acfa4feeaa"
            ]
        ]
    },
    {
        "id": "709342bf9606ee68",
        "type": "change",
        "z": "ac5ff1e93343fdc4",
        "name": "TemperaturaAire",
        "rules": [
            {
                "t": "set",
                "p": "datastream",
                "pt": "msg",
                "to": "2024",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "TemperaturaAire",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 260,
        "wires": [
            [
                "e23df2acfa4feeaa"
            ]
        ]
    },
    {
        "id": "2277daeda82b055d",
        "type": "change",
        "z": "ac5ff1e93343fdc4",
        "name": "EstacionCuesta",
        "rules": [
            {
                "t": "set",
                "p": "thing_id",
                "pt": "msg",
                "to": "9",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "station_table",
                "pt": "msg",
                "to": "cuesta",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 600,
        "wires": [
            [
                "0c1358ed8efbbb0c",
                "10d7c4320a9bd6bd",
                "d5806d320c01f6bf"
            ]
        ]
    },
    {
        "id": "f19726f1dc31c6b6",
        "type": "http request",
        "z": "ac5ff1e93343fdc4",
        "name": "peticionAPI",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://sensores.grafcan.es/api/v1.0/observations/?datastream__thing={{{thing_id}}}&result_time_after={{{dateFrom}}}&result_time_before={{{dateTo}}}&datastream={{{datastream}}}&page={{{page}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "accept",
                "valueType": "other",
                "valueValue": "application/json"
            },
            {
                "keyType": "other",
                "keyValue": "Authorization",
                "valueType": "other",
                "valueValue": "Api-Key t96Ff6lD.gMd1FS8ZBeEjoNgbKKfwH4bA1dnmi6TR"
            }
        ],
        "x": 1070,
        "y": 400,
        "wires": [
            [
                "756c2e4c7c2595a9"
            ]
        ]
    },
    {
        "id": "1d62049e06eb3591",
        "type": "change",
        "z": "ac5ff1e93343fdc4",
        "name": "PresionAtmosferica",
        "rules": [
            {
                "t": "set",
                "p": "datastream",
                "pt": "msg",
                "to": "2407",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "PresionAtmosferica",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 340,
        "wires": [
            [
                "f19726f1dc31c6b6"
            ]
        ]
    },
    {
        "id": "96267f445fbeecfd",
        "type": "change",
        "z": "ac5ff1e93343fdc4",
        "name": "HumedadRelativa",
        "rules": [
            {
                "t": "set",
                "p": "datastream",
                "pt": "msg",
                "to": "2400",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "HumedadRelativa",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 850,
        "y": 400,
        "wires": [
            [
                "f19726f1dc31c6b6"
            ]
        ]
    },
    {
        "id": "94cd592400d110f9",
        "type": "change",
        "z": "ac5ff1e93343fdc4",
        "name": "TemperaturaAire",
        "rules": [
            {
                "t": "set",
                "p": "datastream",
                "pt": "msg",
                "to": "2401",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "TemperaturaAire",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 460,
        "wires": [
            [
                "f19726f1dc31c6b6"
            ]
        ]
    },
    {
        "id": "a566477df7e13655",
        "type": "change",
        "z": "ac5ff1e93343fdc4",
        "name": "EstacionCristianos",
        "rules": [
            {
                "t": "set",
                "p": "thing_id",
                "pt": "msg",
                "to": "47",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "station_table",
                "pt": "msg",
                "to": "cristianos",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 420,
        "wires": [
            [
                "1d62049e06eb3591",
                "96267f445fbeecfd",
                "94cd592400d110f9"
            ]
        ]
    },
    {
        "id": "0c1358ed8efbbb0c",
        "type": "change",
        "z": "ac5ff1e93343fdc4",
        "name": "PresionAtmosferica",
        "rules": [
            {
                "t": "set",
                "p": "datastream",
                "pt": "msg",
                "to": "1848",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "PresionAtmosferica",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 540,
        "wires": [
            [
                "f5831182f908c8bc"
            ]
        ]
    },
    {
        "id": "10d7c4320a9bd6bd",
        "type": "change",
        "z": "ac5ff1e93343fdc4",
        "name": "HumedadRelativa",
        "rules": [
            {
                "t": "set",
                "p": "datastream",
                "pt": "msg",
                "to": "1840",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "HumedadRelativa",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 600,
        "wires": [
            [
                "f5831182f908c8bc"
            ]
        ]
    },
    {
        "id": "d5806d320c01f6bf",
        "type": "change",
        "z": "ac5ff1e93343fdc4",
        "name": "TemperaturaAire",
        "rules": [
            {
                "t": "set",
                "p": "datastream",
                "pt": "msg",
                "to": "1842",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "TemperaturaAire",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 660,
        "wires": [
            [
                "f5831182f908c8bc"
            ]
        ]
    },
    {
        "id": "f5831182f908c8bc",
        "type": "http request",
        "z": "ac5ff1e93343fdc4",
        "name": "peticionAPI",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://sensores.grafcan.es/api/v1.0/observations/?datastream__thing={{{thing_id}}}&result_time_after={{{dateFrom}}}&result_time_before={{{dateTo}}}&datastream={{{datastream}}}&page={{{page}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "other",
                "keyValue": "accept",
                "valueType": "other",
                "valueValue": "application/json"
            },
            {
                "keyType": "other",
                "keyValue": "Authorization",
                "valueType": "other",
                "valueValue": "Api-Key t96Ff6lD.gMd1FS8ZBeEjoNgbKKfwH4bA1dnmi6TR"
            }
        ],
        "x": 1090,
        "y": 600,
        "wires": [
            [
                "52406005726d92df"
            ]
        ]
    },
    {
        "id": "5961e93125cdcd7a",
        "type": "inject",
        "z": "ac5ff1e93343fdc4",
        "name": "HistoricoBD",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "page",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 1060,
        "wires": [
            [
                "1a0051617ef581d4"
            ]
        ]
    },
    {
        "id": "95aa7f6445da0f7a",
        "type": "function",
        "z": "ac5ff1e93343fdc4",
        "name": "ManageBatches",
        "func": "const startDate = new Date(msg.dateFromRaw);\nconst endDate = new Date(msg.dateToRaw);\n\nconst timeDifference = +endDate - +startDate;\n\n// Convert milliseconds to days\nconst daysDifference = timeDifference / (1000 * 3600 * 24);\n\n// Each batch covers 10 hours of a day\nconst batches = Math.ceil(daysDifference*24/10);\n\nmsg.page = msg.page + 1;\n\nif (msg.page <= batches) {\n    return msg;  // Continue loop\n} else {\n    return null; // Stop loop\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1060,
        "wires": [
            [
                "0e0af2f148980a05"
            ]
        ]
    },
    {
        "id": "0e0af2f148980a05",
        "type": "delay",
        "z": "ac5ff1e93343fdc4",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 1280,
        "wires": [
            [
                "95aa7f6445da0f7a",
                "2277daeda82b055d",
                "c23772d04aa6527c"
            ]
        ]
    },
    {
        "id": "1a0051617ef581d4",
        "type": "function",
        "z": "ac5ff1e93343fdc4",
        "name": "IntervaloFechas",
        "func": "const ToSubtract = 6; // horas previas = frecuencia de actualización\nconst now = new Date(2025,2,9);\nconst past = new Date(2023,2,1);\n\nmsg.dateFromRaw = past;\nmsg.dateToRaw = now;\n\nmsg.dateFrom = encodeURIComponent(past.toISOString().substring(0, 16) + '+00:00');\nmsg.dateTo = encodeURIComponent(now.toISOString().substring(0, 16) + '+00:00');\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 1060,
        "wires": [
            [
                "95aa7f6445da0f7a"
            ]
        ]
    },
    {
        "id": "911612affa2792dd",
        "type": "postgresql",
        "z": "ac5ff1e93343fdc4",
        "name": "",
        "query": "{{{msg.payload}}}",
        "postgreSQLConfig": "b5d03cf417768022",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 1530,
        "y": 200,
        "wires": [
            [
                "e71b5cb6d7be3034"
            ]
        ]
    },
    {
        "id": "e71b5cb6d7be3034",
        "type": "debug",
        "z": "ac5ff1e93343fdc4",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1580,
        "y": 100,
        "wires": []
    },
    {
        "id": "756c2e4c7c2595a9",
        "type": "join",
        "z": "ac5ff1e93343fdc4",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1230,
        "y": 400,
        "wires": [
            [
                "beaf31bfc3c9a8fd"
            ]
        ]
    },
    {
        "id": "52406005726d92df",
        "type": "join",
        "z": "ac5ff1e93343fdc4",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "useparts": false,
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1250,
        "y": 600,
        "wires": [
            [
                "beaf31bfc3c9a8fd"
            ]
        ]
    },
    {
        "id": "c23772d04aa6527c",
        "type": "delay",
        "z": "ac5ff1e93343fdc4",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 520,
        "wires": [
            [
                "a566477df7e13655",
                "80fcbbbf51730904"
            ]
        ]
    },
    {
        "id": "80fcbbbf51730904",
        "type": "delay",
        "z": "ac5ff1e93343fdc4",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 360,
        "y": 360,
        "wires": [
            [
                "1e692a03ebcb0c6e"
            ]
        ]
    },
    {
        "id": "9e8a99185e3350ed",
        "type": "inject",
        "z": "23d3cf0a3496401e",
        "g": "09b02b2d35a7817d",
        "name": "Predicciones2dias",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "c830440e22355f7b",
                "c4acccca2bd0358a"
            ]
        ]
    },
    {
        "id": "c830440e22355f7b",
        "type": "change",
        "z": "23d3cf0a3496401e",
        "g": "09b02b2d35a7817d",
        "name": "Ubicación",
        "rules": [
            {
                "t": "set",
                "p": "latitude",
                "pt": "msg",
                "to": "28.073",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "longitude",
                "pt": "msg",
                "to": "-16.513",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 120,
        "wires": [
            [
                "a8b988c67fdf4f2f"
            ]
        ]
    },
    {
        "id": "db272724bab6794f",
        "type": "http request",
        "z": "23d3cf0a3496401e",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "{{{payload}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1070,
        "y": 140,
        "wires": [
            [
                "e916b988ddfc221f"
            ]
        ]
    },
    {
        "id": "73fa8a22d0710a6a",
        "type": "comment",
        "z": "23d3cf0a3496401e",
        "g": "09b02b2d35a7817d",
        "name": "Predicciones horarias ",
        "info": "",
        "x": 180,
        "y": 60,
        "wires": []
    },
    {
        "id": "e89c85c02eeec6a8",
        "type": "template",
        "z": "23d3cf0a3496401e",
        "name": "ConstruirPeticion",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "https://api.open-meteo.com/v1/forecast?latitude={{{latitude}}}&longitude={{{longitude}}}&hourly=temperature_2m,relative_humidity_2m,apparent_temperature,precipitation,surface_pressure,cloud_cover,wind_speed_80m,wind_direction_80m,shortwave_radiation&timezone=GMT&start_date={{{startDate}}}&end_date={{{endDate}}}",
        "output": "str",
        "x": 870,
        "y": 140,
        "wires": [
            [
                "db272724bab6794f"
            ]
        ]
    },
    {
        "id": "e916b988ddfc221f",
        "type": "function",
        "z": "23d3cf0a3496401e",
        "name": "ActualizarBD",
        "func": "let data = {};\n\nfor (let key in msg.payload.hourly) {\n    data[key] = msg.payload.hourly[key];\n}\n\nlet keys = Object.keys(data);\nlet length = data[keys[0]].length;\n\nif (keys.every(key => data[key].length === length)) {\n    \n    // Construir la parte de las columnas (en formato SQL)\n    let columns = keys.join(', ');\n\n    // Construir la parte de los valores para la consulta\n    let values = Array.from({ length }).map((_, index) => {\n        return `(${keys.map(key => \n            // Si el valor es una cadena, agregar comillas\n            typeof data[key][index] === 'string' ? `\"${data[key][index]}\"` : data[key][index]\n        ).join(', ')})`;\n    }).join(',');\n\n    // Construir la consulta completa\n    msg.topic = `INSERT INTO open_meteo (${columns}) \n                   VALUES ${values} \n                   ON CONFLICT(time) DO UPDATE SET \n                   ${keys.map(key => `${key} = excluded.${key}`).join(', ')};`;\n\n} else {\n    msg.topic = \"Error: Los arrays no tienen la misma longitud.\";\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1230,
        "y": 140,
        "wires": [
            [
                "f11b747ed580cbdc"
            ]
        ]
    },
    {
        "id": "de93898b4de01368",
        "type": "comment",
        "z": "23d3cf0a3496401e",
        "g": "50a43dec8ecaae07",
        "name": "Histórico de predicciones horarias",
        "info": "",
        "x": 220,
        "y": 240,
        "wires": []
    },
    {
        "id": "68bf10eabf62b720",
        "type": "change",
        "z": "23d3cf0a3496401e",
        "g": "50a43dec8ecaae07",
        "name": "Fechas",
        "rules": [
            {
                "t": "set",
                "p": "startDate",
                "pt": "msg",
                "to": "2024-12-30",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "endDate",
                "pt": "msg",
                "to": "2024-12-31",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 300,
        "wires": [
            [
                "e89c85c02eeec6a8"
            ]
        ]
    },
    {
        "id": "89fa674e6b03b2fc",
        "type": "inject",
        "z": "23d3cf0a3496401e",
        "g": "50a43dec8ecaae07",
        "name": "PrediccionesHistóricas",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 300,
        "wires": [
            [
                "67bde6574f702c65"
            ]
        ]
    },
    {
        "id": "a8b988c67fdf4f2f",
        "type": "function",
        "z": "23d3cf0a3496401e",
        "g": "09b02b2d35a7817d",
        "name": "Fechas",
        "func": "let now = new Date();\nlet year = now.getFullYear();\nlet month = String(now.getMonth() + 1).padStart(2, '0'); // Months are 0-based\nlet day = String(now.getDate()).padStart(2, '0');\n\nmsg.startDate = `${year}-${month}-${day}`;\n\n// Definir el intervalo en días\nlet interval = 2; \n\nlet endDate = new Date(now);\nendDate.setDate(now.getDate() + interval);\nlet endYear = endDate.getFullYear();\nlet endMonth = String(endDate.getMonth() + 1).padStart(2, '0');\nlet endDay = String(endDate.getDate()).padStart(2, '0');\n\nmsg.endDate = `${endYear}-${endMonth}-${endDay}`;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 120,
        "wires": [
            [
                "e89c85c02eeec6a8"
            ]
        ]
    },
    {
        "id": "f11b747ed580cbdc",
        "type": "sqlite",
        "z": "23d3cf0a3496401e",
        "mydb": "2136aee6ef4e9b7a",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "",
        "x": 1520,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "67bde6574f702c65",
        "type": "change",
        "z": "23d3cf0a3496401e",
        "g": "50a43dec8ecaae07",
        "name": "Ubicación",
        "rules": [
            {
                "t": "set",
                "p": "latitude",
                "pt": "msg",
                "to": "28.073",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "longitude",
                "pt": "msg",
                "to": "-16.513",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 340,
        "y": 300,
        "wires": [
            [
                "68bf10eabf62b720"
            ]
        ]
    },
    {
        "id": "c4acccca2bd0358a",
        "type": "trigger",
        "z": "23d3cf0a3496401e",
        "g": "09b02b2d35a7817d",
        "name": "cada6horas",
        "op1": "1",
        "op2": "0",
        "op1type": "str",
        "op2type": "str",
        "duration": "-6",
        "extend": false,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 330,
        "y": 120,
        "wires": [
            [
                "c830440e22355f7b"
            ]
        ]
    },
    {
        "id": "131cb53b36dec0e6",
        "type": "inject",
        "z": "3132f082b38ee5af",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 240,
        "wires": [
            [
                "6c40eb116f8fb375"
            ]
        ]
    },
    {
        "id": "4cbf193ad76ae46a",
        "type": "debug",
        "z": "3132f082b38ee5af",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 640,
        "y": 260,
        "wires": []
    },
    {
        "id": "6c40eb116f8fb375",
        "type": "postgresql",
        "z": "3132f082b38ee5af",
        "name": "",
        "query": "SELECT * FROM users;",
        "postgreSQLConfig": "b5d03cf417768022",
        "split": false,
        "rowsPerMsg": 1,
        "outputs": 1,
        "x": 410,
        "y": 240,
        "wires": [
            [
                "4cbf193ad76ae46a"
            ]
        ]
    }
]